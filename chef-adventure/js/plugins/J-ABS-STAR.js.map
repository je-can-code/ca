{"version":3,"file":"J-ABS-STAR.js","sources":["../../src/core/Aliased.js","../../src/core/Metadata.js","../../src/core/PluginParameters.js","../../src/core/DefaultValues.js","../../src/core/VersionCheck.js","../../src/managers/BattleManager.js","../../src/managers/DataManager.js","../../src/scenes/SceneMap.js","../../src/objects/GameInterpreter.js","../../src/objects/GameMap.js","../../src/objects/GamePlayer.js","../../src/objects/GameTroop.js"],"sourcesContent":["/**\r\n * The aliased classes within this plugin.\r\n */\r\nJ.STAR.Aliased = {\r\n  BattleManager: {},\r\n  DataManager: {},\r\n  Game_BattleMap: {},\r\n  Game_Character: {},\r\n  Game_Event: {},\r\n  Game_Interpreter: {},\r\n  Game_Map: {},\r\n  Game_Player: {},\r\n  Game_Troop: {},\r\n  Scene_Map: {},\r\n};","/**\r\n * The metadata for this plugin.\r\n */\r\nJ.STAR.Metadata = {\r\n  Name: 'J-ABS-STAR',\r\n  Version: '1.0.0',\r\n};","/**\r\n * The actual `plugin parameters` extracted from RMMZ.\r\n */\r\nJ.STAR.PluginParameters = PluginManager.parameters(J.STAR.Metadata.Name);","/**\r\n * The default values for this plugin.\r\n */\r\nJ.STAR.DefaultValues = {\r\n  /**\r\n   * The mapId used when there is no mapId specified.\r\n   */\r\n  EnemyMap: 110,\r\n};","/**\r\n * The implementation of the version check for this plugin.\r\n * Ensures we have the minimum required versions for the dependency plugins.\r\n */\r\n(function versionCheck() {\r\n  // Check to ensure we have the minimum required version of the J-Base plugin.\r\n  const requiredBaseVersion = '1.0.0';\r\n  const hasBaseRequirement = J.BASE.Helpers.satisfies(J.BASE.Metadata.Version, requiredBaseVersion);\r\n  if (!hasBaseRequirement) {\r\n    throw new Error(`Either missing J-Base or has a lower version than the required: ${requiredBaseVersion}`);\r\n  }\r\n\r\n// Check to ensure we have the minimum required version of the J-ABS plugin.\r\n  const requiredJabsVersion = '3.0.0';\r\n  const hasJabsRequirement = J.BASE.Helpers.satisfies(J.ABS.Metadata.Version, requiredJabsVersion);\r\n  if (!hasJabsRequirement) {\r\n    throw new Error(`Either missing J-ABS or has a lower version than the required: ${requiredJabsVersion}`);\r\n  }\r\n})();","\r\nBattleManager.enemyMap = BattleManager.enemyMap || { events: [] };\r\n\r\nJ.STAR.Aliased.BattleManager.initMembers = BattleManager.initMembers;\r\nBattleManager.initMembers = function() {\r\n  J.STAR.Aliased.BattleManager.initMembers.call(this);\r\n\r\n  /**\r\n  * The player's origin map id- where they will be sent back to.\r\n  * @type {number}\r\n  */\r\n  this._originMapId = 0;\r\n\r\n  /**\r\n  * The player's origin x coordinate- where they will be sent back to.\r\n  * @type {number}\r\n  */\r\n  this._originX = 0;\r\n\r\n  /**\r\n  * The player's origin y coordinate- where they will be sent back to.\r\n  * @type {number}\r\n  */\r\n  this._originY = 0;\r\n\r\n  /**\r\n  * Whether or not the engine is setting up the battle for the player.\r\n  * @type {boolean}\r\n  */\r\n  this._preparingForBattle = false;\r\n\r\n  /**\r\n  * Whether or not the player is engaged in battle.\r\n  * @type {boolean}\r\n  */\r\n  this._inBattle = false;\r\n};\r\n\r\nBattleManager.prepareForStarBattle = function(originMapId, originX, originY) {\r\n  BattleManager.setup($gameTroop.troop().id, true, true);\r\n  this.engageInBattle();\r\n  this._originMapId = originMapId;\r\n  this._originX = originX;\r\n  this._originY = originY;\r\n  //* TODO: add more here for which map id to send based on player's map id?\r\n  $gamePlayer.reserveTransfer(109, 14, 9);\r\n};\r\n\r\nBattleManager.beginBattlePreparation = function() {\r\n  this._preparingForBattle = true;\r\n};\r\n\r\nBattleManager.endBattlePreparation = function() {\r\n  this._preparingForBattle = false;\r\n};\r\n\r\nBattleManager.preparingForBattle = function() {\r\n  return this._preparingForBattle;\r\n};\r\n\r\nBattleManager.engageInBattle = function() {\r\n  this._inBattle = true;\r\n};\r\n\r\nBattleManager.disengageInBattle = function() {\r\n  this._inBattle = false;\r\n};\r\n\r\nBattleManager.isInBattle = function() {\r\n  return this._inBattle;\r\n};\r\n\r\nBattleManager.origin = function() {\r\n  return {\r\n    mapId: this._originMapId,\r\n    originX: this._originX,\r\n    originY: this._originY,\r\n  };\r\n};","J.STAR.Aliased.DataManager.createGameObjects = DataManager.createGameObjects;\r\nDataManager.createGameObjects = function() {\r\n  J.STAR.Aliased.DataManager.createGameObjects.call(this);\r\n\r\n  DataManager.getEnemyMasterMap();\r\n};\r\n\r\n/**\r\n * Executes the retrieval of the enemy master map from which we clone all JABS battlers.\r\n */\r\nDataManager.getEnemyMasterMap = function() {\r\n  const mapId = J.STAR.DefaultValues.EnemyMap;\r\n  if (mapId > 0) {\r\n    const filename = \"Map%1.json\".format(mapId.padZero(3));\r\n    this.loadEnemyMasterMap(\"$dataMap\", filename);\r\n  } else {\r\n    throw new Error(\"Missing enemy master map.\");\r\n  }\r\n};\r\n\r\n/**\r\n * Retrieves the skill master map.\r\n * @param {string} name The name of the file to retrieve.\r\n * @param {string} src The source.\r\n */\r\nDataManager.loadEnemyMasterMap = function(name, src) {\r\n  const xhr = new XMLHttpRequest();\r\n  const url = \"data/\" + src;\r\n  xhr.open(\"GET\", url);\r\n  xhr.overrideMimeType(\"application/json\");\r\n  xhr.onload = () => this.onEnemyMapGet(xhr, name, src, url);\r\n  xhr.onerror = () => this.gracefulFail(name, src, url);\r\n  xhr.send();\r\n};\r\n\r\n/**\r\n * Retrieves the enemy map data file from a given location.\r\n * @param {XMLHttpRequest} xhr The `xhr` service for fetching files from the local.\r\n * @param {string} name The name of the file to retrieve.\r\n * @param {string} src The source.\r\n * @param {string} url The path of the file to retrieve.\r\n */\r\nDataManager.onEnemyMapGet = function(xhr, name, src, url) {\r\n  if (xhr.status < 400) {\r\n    BattleManager.enemyMap = JSON.parse(xhr.responseText);\r\n  } else {\r\n    this.gracefulFail(name, src, url);\r\n  }\r\n};","/**\r\n * OVERWRITE Disables Scene_Map's base encounter scene management.\r\n */\r\nScene_Map.prototype.updateEncounter = function() {\r\n  if ($gamePlayer.executeEncounter()) {\r\n    this.startFadeOut();\r\n  }\r\n};\r\n\r\n/**\r\n * `updateEncounterEffect` handles the zoom/flashing battle transition.\r\n */\r\nJ.STAR.Aliased.Scene_Map.update = Scene_Map.prototype.update;\r\nScene_Map.prototype.update = function() {\r\n  J.STAR.Aliased.Scene_Map.update.call(this);\r\n  //? TODO: Modify encountereffect here.\r\n};","/**\r\n * OVERWRITE Modifies the event command handler of \"Battle Processing\" to prepare for\r\n * star battle instead of a default battle.\r\n * @param {any} params The parameters from the event command.\r\n * @returns {boolean}\r\n */\r\nGame_Interpreter.prototype.command301 = function(params) {\r\n  if (!$gameParty.inBattle()) {\r\n      let troopId;\r\n      if (params[0] === 0) {\r\n          // Direct designation\r\n          troopId = params[1];\r\n      } else if (params[0] === 1) {\r\n          // Designation with a variable\r\n          troopId = $gameVariables.value(params[1]);\r\n      } else {\r\n          // Same as Random Encounters\r\n          troopId = $gamePlayer.makeEncounterTroopId();\r\n      }\r\n      if ($dataTroops[troopId]) {\r\n          BattleManager.setup(troopId, params[2], params[3]);\r\n          BattleManager.setEventCallback(n => {\r\n              this._branch[this._indent] = n;\r\n          });\r\n          $gamePlayer.makeEncounterCount();\r\n          // SceneManager.push(Scene_Battle);\r\n          $gamePlayer.prepareForStarBattle();\r\n      }\r\n  }\r\n  return true;\r\n};","Game_Map.prototype.postTransferEnemyParsing = function() {\r\n  if (BattleManager.preparingForBattle()) {\r\n    $gameTroop.members().forEach((gameEnemy, index) => {\r\n      const enemyId = gameEnemy.enemyId();\r\n      const enemyData = JsonEx.makeDeepCopy(BattleManager.enemyMap.events[enemyId]);\r\n      const originalEvent = $dataMap.events[index+1];\r\n      enemyData.x = originalEvent.x;\r\n      enemyData.y = originalEvent.y;\r\n      $dataMap.events[index + 1] = enemyData;\r\n      const newEnemy = new Game_Event(J.STAR.DefaultValues.EnemyMap, index+1);\r\n      $gameMap._events[index] = newEnemy;\r\n    });\r\n\r\n    BattleManager.endBattlePreparation();\r\n    BattleManager.engageInBattle();\r\n  }\r\n};\r\n\r\n/**\r\n* Extends `update` to also update the field for star battle.\r\n*/\r\nJ.STAR.Aliased.Game_Map.update = Game_Map.prototype.update;\r\nGame_Map.prototype.update = function() {\r\n  J.STAR.Aliased.Game_Map.update.call(this);\r\n  this.updateStarBattle();\r\n};\r\n\r\nGame_Map.prototype.updateStarBattle = function() {\r\n  if (BattleManager.preparingForBattle()) {\r\n    // do nothing.\r\n  } else if (BattleManager.isInBattle()) {\r\n    if (!$gameTroop.areEnemiesAlive()) {\r\n      this.endStarBattle();\r\n    }\r\n  }\r\n};\r\n\r\nGame_Map.prototype.endStarBattle = function() {\r\n  const { mapId, originX, originY } = BattleManager.origin();\r\n  $gamePlayer.reserveTransfer(mapId, originX, originY);\r\n  BattleManager.disengageInBattle();\r\n};","J.STAR.Aliased.Game_Player.clearTransferInfo = Game_Player.prototype.clearTransferInfo;\r\nGame_Player.prototype.clearTransferInfo = function() {\r\n  J.STAR.Aliased.Game_Player.clearTransferInfo.call(this);\r\n  $gameMap.postTransferEnemyParsing();\r\n};\r\n\r\n/**\r\n * Extends `executeEncounter` to include preparing for star battle.\r\n */\r\nJ.STAR.Aliased.Game_Player.executeEncounter = Game_Player.prototype.executeEncounter;\r\nGame_Player.prototype.executeEncounter = function() {\r\n  const base = J.STAR.Aliased.Game_Player.executeEncounter.call(this);\r\n  if (base) {\r\n    this.prepareForStarBattle();\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\n/**\r\n * Captures the origin map data for where to send the player back after battle.\r\n */\r\nGame_Player.prototype.prepareForStarBattle = function() {\r\n  const originMapId = $gameMap.mapId();\r\n  const originX = this.x;\r\n  const originY = this.y;\r\n  const mapMetadata = $dataMap.meta;\r\n  let battleMapId = 109;\r\n  if (mapMetadata && mapMetadata[\"battleMap\"]) {\r\n    battleMapId = mapMetadata[\"battleMap\"];\r\n  }\r\n\r\n  BattleManager.prepareForStarBattle(originMapId, originX, originY, battleMapId);\r\n  BattleManager.beginBattlePreparation();\r\n};","J.STAR.Aliased.Game_Troop.initialize = Game_Troop.prototype.initialize;\r\nGame_Troop.prototype.initialize = function() {\r\n  this.initMembers();\r\n  J.STAR.Aliased.Game_Troop.initialize.call(this);\r\n};\r\n\r\n/**\r\n* Initializes other properties for this class.\r\n*/\r\nGame_Troop.prototype.initMembers = function() {\r\n  /**\r\n  * The number of remaining enemies on the current map.\r\n  * @type {number}\r\n  */\r\n  this._remainingEnemyCount = 0;\r\n};\r\n\r\nGame_Troop.prototype.updateRemainingEnemyCount = function() {\r\n  this._remainingEnemyCount = $gameMap.getOpposingBattlers(\r\n    $gameBattleMap.getPlayerMapBattler()\r\n  ).length;\r\n  return this._remainingEnemyCount;\r\n};\r\n\r\nGame_Troop.prototype.areEnemiesAlive = function() {\r\n  return this.updateRemainingEnemyCount();\r\n};"],"names":["J","STAR","Aliased","BattleManager","DataManager","Game_BattleMap","Game_Character","Game_Event","Game_Interpreter","Game_Map","Game_Player","Game_Troop","Scene_Map","Metadata","Name","Version","PluginParameters","PluginManager","parameters","DefaultValues","EnemyMap","versionCheck","requiredBaseVersion","hasBaseRequirement","BASE","Helpers","satisfies","Error","requiredJabsVersion","hasJabsRequirement","ABS","enemyMap","events","initMembers","call","_originMapId","_originX","_originY","_preparingForBattle","_inBattle","prepareForStarBattle","originMapId","originX","originY","setup","$gameTroop","troop","id","engageInBattle","$gamePlayer","reserveTransfer","beginBattlePreparation","endBattlePreparation","preparingForBattle","disengageInBattle","isInBattle","origin","mapId","createGameObjects","getEnemyMasterMap","filename","format","padZero","loadEnemyMasterMap","name","src","xhr","XMLHttpRequest","url","open","overrideMimeType","onload","onEnemyMapGet","onerror","gracefulFail","send","status","JSON","parse","responseText","prototype","updateEncounter","executeEncounter","startFadeOut","update","command301","params","$gameParty","inBattle","troopId","$gameVariables","value","makeEncounterTroopId","$dataTroops","setEventCallback","n","_branch","_indent","makeEncounterCount","postTransferEnemyParsing","members","forEach","gameEnemy","index","enemyId","enemyData","JsonEx","makeDeepCopy","originalEvent","$dataMap","x","y","newEnemy","$gameMap","_events","updateStarBattle","areEnemiesAlive","endStarBattle","clearTransferInfo","base","mapMetadata","meta","battleMapId","initialize","_remainingEnemyCount","updateRemainingEnemyCount","getOpposingBattlers","$gameBattleMap","getPlayerMapBattler","length"],"mappings":"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"}