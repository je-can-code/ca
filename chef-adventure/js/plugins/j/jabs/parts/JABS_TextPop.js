/*:
 * @target MZ
 * @plugindesc 
 * [v3.0 JABS] Pop-up data structure.
 * @author JE
 * @url https://github.com/je-can-code/rmmz
 * @base J-ABS
 * @help
 * ============================================================================
 * A component of JABS.
 * This class represents the data structure of the popups used throughout JABS.
 * ============================================================================
 */

/**
 * A class representing a single popup on the map.
 */
function JABS_TextPop()
{
  this.initialize(...arguments);
}
JABS_TextPop.prototype = {};
JABS_TextPop.prototype.constructor = JABS_TextPop;

/**
 * A static collection of all types associated with text pops.
 */
JABS_TextPop.Types = {
  /**
   * The popup type of "damage", for displaying negative or positive damage pops.
   */
  Damage: 'damage',

  /**
   * The popup type of "experience", for displaying gained experience pops.
   */
  Experience: 'exp',

  /**
   * The popup type of "gold", for displaying earned gold pops.
   */
  Gold: 'gold',

  /**
   * The popup type of "levelup", for displaying levelups pops.
   */
  Levelup: 'levelup',

  /**
   * The popup type of "item", for displaying loot pops.
   */
  Item: 'item',

  /**
   * The popup type of "slip", for displaying pops generated by slip damage/healing.
   */
  Slip: 'slip',

  /**
   * The popup type of "skillLearn", for displaying skills learned as a pop.
   */
  Learn: 'skillLearn',

  /**
   * The popup type of "sdp", for displaying SDP points earned after defeating foes.
   */
  Sdp: 'sdp',

  /**
   * The popup type of "skillUsage", for displaying used skills as popups off the battlers on the map.
   */
  SkillUsage: 'skillUsage',
};

/**
 * Creates a popup based on the provided info.
 * @returns
 */
JABS_TextPop.create = function({
                                 actionResult,
                                 iconIndex,
                                 textColorIndex,
                                 isWeakness,
                                 isStrength,
                                 popupType,
                                 directValue
                               })
{
  return new JABS_TextPop({
    actionResult: actionResult ?? null,
    iconIndex: iconIndex ?? 0,
    textColorIndex: textColorIndex ?? 0,
    isWeakness: isWeakness ?? false,
    isStrength: isStrength ?? false,
    popupType: popupType ?? JABS_TextPop.Types.Damage,
    directValue: directValue ?? String.empty,
  });
};

/**
 * Builds the text pop based on the given parameters.
 */
JABS_TextPop.prototype.initialize = function({
                                               actionResult,
                                               iconIndex,
                                               textColorIndex,
                                               isWeakness,
                                               isStrength,
                                               popupType,
                                               directValue,
                                             })
{
  /**
   * The base `Game_ActionResult` for this `JABS_TextPop`.
   * @type {Game_ActionResult}
   */
  this.actionResult = actionResult;

  /**
   * The id of the icon to display alongside this `JABS_TextPop`.
   * @type {number}
   */
  this.iconIndex = iconIndex;

  /**
   * The color index for the text color.
   * @type {number}
   */
  this.textColorIndex = textColorIndex;

  /**
   * Whether or not this popup was multiplied by elemental weaknesses.
   * @type {boolean}
   */
  this.isWeakness = isWeakness;

  /**
   * Whether or not this popup was reduced by elemental strengths.
   * @type {boolean}
   */
  this.isStrength = isStrength;

  /**
   * The type of popup this is, such as damage, experience, loot, etc.
   * @type {string}
   */
  this.popupType = popupType;

  /**
   * The direct value to display if not calculated from the actionresult.
   * @type {string}
   */
  this.directValue = directValue;
};
//ENDFILE